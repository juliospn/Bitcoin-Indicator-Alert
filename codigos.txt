// popup.html

<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <title>Bitcoin Indicator Alert Extension</title>
  <link rel="stylesheet" href="reset.css">
  <link rel="stylesheet" href="style.css">
</head>

<body>
  <div class="container">
    <div>
      <h1> Hello, <span class="orange">Satoshi!</span></h1> 
      <h2 class="price">Bitcoin Price:</h2>
      <div id="price">Loading...</div>
      <div class="funding">
        <h2>Funding Rate:</h2>
        <div id="funding-rate">Loading...</div>
      </div>
    </div>
    <div class="switch-container">
      <span class="switch-label">Alarm</span>
      <label class="switch">
        <input type="checkbox" id="alarm-checkbox">
        <span class="slider round"></span>
      </label>
      <div class="alarm-levels">
        <label>
          <input type="checkbox" name="alarmLevels[]" value="1" checked>
          #Time2Buy level 1 (-0,004)
        </label><br>
        <label>
          <input type="checkbox" name="alarmLevels[]" value="2" checked>
          #Time2Buy level 2 (-0,006)
        </label><br>
        <label>
          <input type="checkbox" name="alarmLevels[]" value="3" checked>
          #Time2Buy level 3 (-0,01)
        </label><br>
        <label>
          <input type="checkbox" name="alarmLevels[]" value="4" checked>
          #Time2Buy level 4 (-0,02)
        </label><br>
        <label>
          <input type="checkbox" name="alarmLevels[]" value="5" checked>
          #Time2Buy level 5 (-0,05)
        </label><br>
        <label>
          <input type="checkbox" name="alarmLevels[]" value="6" checked>
          #Time2Buy level 6 (-0,1)
        </label><br>
      </div>
    </div>
    
  </div>
  <footer>
    <p>© 2023 #Time2Buy</p><a href="https://juliospn.github.io/CounterFlow-DCA/">CounterFlow DCA Strategy</a>
  </footer>
  <script src="popup.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/websocket/1.0.31/websocket.min.js"></script>
  <script src="alarm.js"></script>
</body>

</html>

======================================================================================
// popup.js

const ws = new WebSocket('wss://fstream.binance.com/ws/btcusdt@markPrice@1s');

const fundingRateDisplay = document.getElementById('funding-rate');
const fundingRateThresholdInput = document.getElementById('fundingRateThreshold');
const saveButton = document.getElementById('saveButton');

ws.onmessage = function (event) {
  const parsedData = JSON.parse(event.data);
  const markPrice = parsedData.p;
  const fundingRate = parsedData.r;

  // Exibir o preço e o funding rate na interface da extensão
  document.getElementById('price').textContent = '$ ' + parseFloat(markPrice).toFixed(2);

  // Adicionar a classe "negative" ao elemento "funding-rate" se o funding rate for negativo, adicionar a classe "positive" caso contrário
  fundingRateDisplay.classList.remove('negative');
  fundingRateDisplay.classList.remove('positive');
  if (fundingRate < 0) {
    fundingRateDisplay.classList.add('negative');
  } else if (fundingRate > 0) {
    fundingRateDisplay.classList.add('positive');
  }

  // Exibir o funding rate na interface da extensão com duas casas decimais
  fundingRateDisplay.textContent = `${(fundingRate * 100).toFixed(5)}`;

  // Atualizar a descrição da extensão com as informações de preço e funding rate
  chrome.browserAction.setTitle({
    title: `Bitcoin Price: $ ${parseFloat(markPrice).toFixed(2)} | Funding Rate: ${(fundingRate * 100).toFixed(2)}%`
  });
}

======================================================================================
// alarm.js

let lastNotifications = {};

// Define o nome da chave de armazenamento local
const storageKey = "alarmEnabled";

// Adiciona um ouvinte de evento ao interruptor de alarme para detectar quando o usuário o altera
document.getElementById("alarm-checkbox").addEventListener("change", function (event) {
    // Armazena o novo estado do interruptor no armazenamento local
    chrome.storage.local.set({ [storageKey]: event.target.checked });
});

// Lê o estado do interruptor do armazenamento local e define seu estado de acordo
chrome.storage.local.get([storageKey], function (result) {
    const isEnabled = result[storageKey];
    document.getElementById("alarm-checkbox").checked = isEnabled;
});

chrome.runtime.onMessage.addListener(function (message) {
    if (message.type === "updateAlarmLevels") {
        chrome.storage.local.get(["enabledAlarmLevels", "alarmLevels"], function (
            result
        ) {
            const enabledAlarmLevels = result.enabledAlarmLevels || [];
            const alarmLevels = result.alarmLevels || {};
            for (let i = 0; i < enabledAlarmLevels.length; i++) {
                const alarmLevel = enabledAlarmLevels[i];
                const fundingRate = parseFloat(
                    document.getElementById("funding-rate").textContent
                );
                if (
                    isEnabled && // Verifica se o interruptor de alarme está ativado
                    fundingRate <= alarmLevels[alarmLevel] &&
                    (lastNotifications[alarmLevel] == undefined ||
                        Date.now() - lastNotifications[alarmLevel] > 60000)
                ) {
                    lastNotifications[alarmLevel] = Date.now();
                    chrome.notifications.create({
                        type: "basic",
                        iconUrl: "icon48.png",
                        title: "#Time2Buy",
                        message: ' Funding rate has dropped to ${ alarmLevels[alarmLevel]}.Time to buy!',
                    });
                }
            }
        });
    }
});

======================================================================================
// style.css

body {
    font-family: Arial, sans-serif;
    font-size: 14px;
    color: #ffffff;
    background-color: rgb(41, 41, 41);
    width: 300px;
}

h1 {
    font-size: 16px;
    margin-bottom: 10px;
    font-weight: 500;
    margin-top: 5px;
}

h2 {
    font-size: 16px;
    margin-bottom: 10px;
}

.orange {
    color: orange;
    width: 55px;
}

.price {
    font-weight: bold;
    padding-top: 5px;
}

.funding {
    margin-top: 20px;
}

.negative {
    color: rgb(21, 167, 21);
}

.positive {
    color: rgba(226, 56, 101, 0.966);
}

.container {
    padding: 8px;
    display: inline-flex;
    width: 100%;
}

.alarm-levels {
    padding: 10px 1px 2px 15px;
    text-align: end;
    font-size: small;
    line-height: 1.3;
}

.switch-container {
    display: flex;
    width: 175px;
    align-items: baseline;
    justify-content: flex-end;
    flex-wrap: wrap;
}

.switch-label {
    margin-right: 10px;
    font-weight: 650;
}

.switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 24px;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 16px;
    width: 16px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked+.slider {
    background-color: #2196F3;
}

input:focus+.slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked+.slider:before {
    -webkit-transform: translateX(15px);
    -ms-transform: translateX(15px);
    transform: translateX(15px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}


button.active {
    background-color: green;
    color: white;
}

footer {
    display: flex;
    margin-top: 2px;
    font-size: 11.5px;
    background-color: rgb(255, 255, 255);
    padding: 8px;
    color: black;
    justify-content: space-evenly;
}

footer a {
    color: #2647ff;
    text-align: center;
    display: flex;
    justify-content: center;
    text-decoration: none;
}

======================================================================================// package.json

{
  "dependencies": {
    "axios": "^1.3.4",
    "binance-api-node": "^0.12.4",
    "chrome-remote-interface": "^0.32.1",
    "express": "^4.18.2",
    "log4js": "^6.9.1",
    "websocket": "^1.0.34"
  }
}


======================================================================================
// manifest.json

{
  "manifest_version": 2,
  "name": "Bitcoin Indicator Alert Extension",
  "version": "1.0.0",
  "description": "This is a browser extension that allows users to monitor Binance's funding rate indicator and receive alerts for overbought and oversold conditions.",
  "icons": {
    "16": "icon-16.png",
    "48": "icon-48.png",
    "128": "icon-128.png"
  },
  "permissions": [
    "activeTab",
    "storage",
    "https://fstream.binance.com/"
  ],
  "content_scripts": [
    {
      "matches": [
        "<all_urls>"
      ],
      "css": [
        "style.css"
      ]
    }
  ],
  "background": {
    "scripts": [
      "background.js"
    ],
    "persistent": false
  },
  "browser_action": {
    "default_icon": {
      "16": "icon-16.png",
      "32": "icon-32.png",
      "48": "icon-48.png",
      "128": "icon-128.png"
    },
    "default_title": "Bitcoin Indicator Alert Extension",
    "default_popup": "popup.html"
  }
}
  
======================================================================================

======================================================================================



